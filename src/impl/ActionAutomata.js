// Generated by CoffeeScript 1.7.1
var ActionAutomata,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ActionAutomata = (function(_super) {
  var _bindActions, _execute;

  __extends(ActionAutomata, _super);

  _execute = function(fnList) {
    var fn, _i, _len;
    for (_i = 0, _len = fnList.length; _i < _len; _i++) {
      fn = fnList[_i];
      fn();
    }
  };

  _bindActions = function(n, target, actionsList, fnProvider) {
    var a, actions, _i, _len;
    actions = [];
    for (_i = 0, _len = actionsList.length; _i < _len; _i++) {
      a = actionsList[_i];
      actions.push(function() {
        return fnProvider[a.exec](a.on, a.args);
      });
    }
    n[target] = function() {
      _execute(actions);
    };
  };

  function ActionAutomata(model, fnProvider) {
    var n, _i, _len, _ref;
    _ref = model.nodes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      n = _ref[_i];
      if (n.enter != null) {
        _bindActions(n, 'enter', n.enter, fnProvider);
      }
      if (n.run != null) {
        _bindActions(n, 'run', n.run, fnProvider);
      }
      if (n.exit != null) {
        _bindActions(n, 'exit', n.exit, fnProvider);
      }
    }
    ActionAutomata.__super__.constructor.call(this, model);
    return;
  }

  return ActionAutomata;

})(Automata);
